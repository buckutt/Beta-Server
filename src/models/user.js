import thinky from '../thinky';

let type = thinky.type;

let User = thinky.createModel('User', {
    id         : type.string().optional(), // Optional => not specified in bodies but generated by RethinkDB
    firstname  : String,
    lastname   : String,
    fullname   : type.virtual().default(function () {
        return `${this.firstname} ${this.lastname}`;
    }),
    nickname   : String,
    pin        : String,
    password   : String,
    mail       : String,
    credit     : Number,
    isTemporary: type.boolean().default(false),
    createdAt  : type.date().default(new Date()),
    editedAt   : Date,
    isRemoved  : type.boolean().default(false)
}, {
    enforce_missing: true,
    enforce_extra  : 'remove',
    enforce_type   : 'strict'
});

User.pre('save', function (next) {
    this.editedAt = new Date();
    next();
});

User.ensureIndex('firstname');
User.ensureIndex('lastname');
User.ensureIndex('nickname');
User.ensureIndex('mail');
User.ensureIndex('createdAt');
User.ensureIndex('editedAt');

User.associate = models => {
    models.User.hasAndBelongsToMany(models.Group, 'groups', 'id', 'id');
    models.User.hasAndBelongsToMany(models.Right, 'rights', 'id', 'id');
    models.User.hasMany(models.MeanOfLogin, 'meansOfLogin', 'id', 'userId');
    models.User.hasMany(models.Purchase, 'purchases', 'id', 'buyerId');
    models.User.hasMany(models.Purchase, 'sells', 'id', 'sellerId');
    models.User.hasMany(models.Reload, 'reloads', 'id', 'buyerId');
    models.User.hasMany(models.Reload, 'reloadsMade', 'id', 'sellerId');
    models.User.hasMany(models.Transfer, 'transfers', 'id', 'recieverId');
    models.User.hasMany(models.Transfer, 'transfersMade', 'id', 'senderId');
};

export default User;
